 

 一.Java List(ArrayList,Vector,LinkedList)

   这三个类都实现了List接口，List用于存放多个元素，能够维护元素的次序，并且允许元素的重复。

  1. ArrayList是最常用的List实现类，内部是通过数组实现的，允许对元素进行快速随机访问。数组的缺点是每个元素之间不能有间隔如，

元素中有两个元素则 list.add(3,"dd")会出错。数组大小太小是需要增加存储能力，然后把数组中已有的数据赋值到新的存储空间当中。

当从ArrayList中插入或者删除数据时，需要对数组进行复制，移动，适合随机查找和遍历，不适合插入和删除

  2.Vector也是通过数组实现的，不同的是它支持线程的同步，某一个时刻只有一个线程能够写Vector，避免多线程同时写而引起的不一致行，

实现同步的代价较高。访问比ArrayList慢。

  3.LinkedList是用链表结构存储数据的，和适合数据的动态插入和删除，但是随机访问和遍历速度比较慢。另外，还提供了List接口没有定义的方法，
专门用于操作表头和表尾元素，可以当做堆栈，队列和双向队列使用
	
	ArrayList在内存不够时默认是扩展50% +1个 源码是这样的 int newCapacity = oldCapacity + (oldCapacity >> 1);
	Vector是默认扩展1倍 源码是这样的 int newCapacity = oldCapacity + ((capacityIncrement > 0) ? capacityIncrement : oldCapacity);
 
   Vector属于线程安全级别的，但是大多数情况下不使用Vector，因为线程安全需要更大的系统开销。

